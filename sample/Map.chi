native struct Map[K, V] : (ps : _pair[K, V]...) {
	lambda get[T] : (K, (K, V) -> T, K -> T) -> T;
	lambda size : Int;
	lambda keySet : () -> Set[K];
	lambda values : () -> Array[V];
	lambda pairSet : Set[_pair[K, V]];
	lambda forEach : ((K, V)) = f -> pairSet.forEach(p -> f(p.o1, p.o2));
}
struct _pair[T1, T2] {
	val o1 : T1;
	val o2 : T2;
}
lambda =>[T1, T2] : (T1, T2) -> _pair[T1, T2] = (o1, o2) -> _pair(o1, o2);
